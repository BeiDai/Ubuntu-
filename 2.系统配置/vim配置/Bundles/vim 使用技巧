1.browse the tags of the current file and get an overview of its structure

#nmap <F6> :TagbarToggle<CR>

2.语法检查

:Errors 显示错误面板
:lnext  到下一个错误
:lprevious 到上一个错误

3.重命名

#Rename XX

4.新建文本

:e this/does/not/exist/file.txt
:w

5.自动补全

au FileType cpp let b:delimitMate_matchpairs = "(:),[:],{:}" 

不自动补全'<' 尖括号

nnoremap <leader>g :YcmCompleter GoToDefinitionElseDeclaration<CR>

6.ctrlp,Vim的模糊搜索工具，支持文件，缓冲区，MRU和标签等的搜索，也支持通过正则表达式搜索（Ctrl-r进行切换）

7.在vim中执行命令行命令

" Run commands that require an interactive shell
nnoremap <Leader>r :RunInInteractiveShell<space>

8.快捷键

nnoremap <leader>g :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <Leader>r :RunInInteractiveShell<space>
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>
nnoremap <Leader>t :call RunCurrentSpecFile()<CR>
nnoremap <Leader>s :call RunNearestSpec()<CR>
nnoremap <Leader>l :call RunLastSpec()<CR>
nmap <F6> :TagbarToggle<CR>
nmap <F5> :NERDTreeToggle<cr>
map <Leader>ct :!ctags -R .<CR>
nnoremap <leader><leader> <c-^>
"<leader>p搜索当前目录下文件
let g:ctrlp_map = '<leader>p'
let g:ctrlp_cmd = 'CtrlP'
"<leader>f搜索MRU（Most Recently Used）文件
nmap <leader>f :CtrlPMRUFiles<CR>
"<leader>b显示缓冲区文件，并可通过序号进行跳转
nmap <Leader>b :CtrlPBuffer<CR>



